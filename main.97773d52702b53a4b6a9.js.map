{"version":3,"sources":["webpack:///./images/photo-red.jpg","webpack:///./js/refs.js","webpack:///./js/components/headers-tpl.js","webpack:///./js/spinner.js","webpack:///./js/api-servise.js","webpack:///./js/decodingJenres.js","webpack:///./js/films-gallery.js","webpack:///./js/movieSearch.js","webpack:///./js/pagination.js","webpack:///./js/modal-login.js","webpack:///./js/login-form.js","webpack:///./js/userLibrary.js","webpack:///./js/homePageRendering.js","webpack:///./js/modal-student.js","webpack:///./index.js"],"names":["module","exports","refs","headerSearchWarningShow","document","querySelector","filmsGallery","header","logo","homeLink","spinner","openModalBtn","closeModalBtn","backdrop","logOutbutton","userName","paginationContainer","headerTemplates","homeHeader","myLibraryHeader","modalHeader","spinnerRef","showSpinner","classList","add","hideSpinner","remove","apiServise","query","page","filmsAmount","path","key","setQuery","value","this","setPage","incrementPage","decrementPage","resetPage","setFilmsAmount","fetchTrends","fetch","then","response","json","fetchMoviesByKeyword","decGenres","id","name","updateFilmsGalleryMarkup","films","map","poster_path","title","release_date","genre_ids","mapedGenres","genres","filter","genre","includes","slicedMapedGenres","length","slice","push","markup","toUpperCase","join","split","insertAdjacentHTML","handleSearchFormSubmit","event","preventDefault","stopListeningOnPaginationContainerClick","removeAttribute","noticeRef","form","currentTarget","input","elements","textContent","renderFilmsByKeywordGallery","paginateFilms","catch","console","log","finally","startListeningOnPaginationContainerClick","reset","results","total_results","innerHTML","options","totalItems","itemsPerPage","visiblePages","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","Pagination","addEventListener","handleOnPaginationContainerClick","removeEventListener","target","nodeName","button","hasAttribute","className","Number","renderTrendsGallery","activeBtnRef1","activeBtnRef2","onCloseModal","window","onEscKeyPress","body","code","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ui","firebaseui","auth","AuthUI","PhoneAuthProvider","filmotekaDatabase","database","ref","currentUserId","uiConfig","signInFlow","signInOptions","PROVIDER_ID","GoogleAuthProvider","EmailAuthProvider","AnonymousAuthProvider","callbacks","signInSuccessWithAuthResult","authResult","setUserData","firebaseUser","uid","userId","userLibrary","userWatched","userQueue","updates","update","e","signOut","localStorage","removeItem","location","reload","onAuthStateChanged","displayName","setItem","JSON","stringify","parse","getItem","getUserLibraryFromDatabase","start","userBase","on","elem","val","toastr","closeButton","debug","newestOnTop","progressBar","positionClass","preventDuplicates","onclick","showDuration","hideDuration","timeOut","extendedTimeOut","showEasing","hideEasing","showMethod","hideMethod","libraryBtn","updateHeaderMarkup","headerTpl","libraryHandleClick","watchedFilms","getUserWatchedFromDatabase","queuedFilms","getUserQueueFromDatabase","watchedBtn","queueBtn","onLibraryButtonsClick","activeBtn","inactiveBtn","updateFilmsLibraryMarkup","localStorageFilms","vote_average","style","display","markupStudent","photoRed","modal","show","closeModalHandler","close","basicLightbox","setAttribute"],"mappings":"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","file":"main.97773d52702b53a4b6a9.js","sourcesContent":["module.exports = __webpack_public_path__ + \"images/photo-red.jpg\";","const refs = {\r\n  headerSearchWarningShow() {\r\n    return document.querySelector('#header-search-warning-show');\r\n  },\r\n  filmsGallery: document.querySelector('#films-gallery'),\r\n  header: document.querySelector('.header-container-js'),\r\n  logo: document.querySelector('.header-logo-js'),\r\n  homeLink: document.querySelector('.navigation-list-item-link-home'),\r\n  spinner: document.querySelector('.js-spinner'),\r\n  openModalBtn: document.querySelector('[data-action=\"open-modal\"]'),\r\n  closeModalBtn: document.querySelector('[data-action=\"close-modal\"]'),\r\n  backdrop: document.querySelector('.js-backdrop'),\r\n  logOutbutton: document.querySelector('.js-singOut-button'),\r\n  userName: document.querySelector('.js-display-username'),\r\n  paginationContainer: document.querySelector('#pagination'),\r\n};\r\n\r\nexport default refs;\r\n","const headerTemplates = {\r\n  homeHeader: `<div class=\" header home-header header-container\">\r\n  \r\n  <form action=\"\" class=\"header-search-form\" id=\"search-form\">\r\n    <input type=\"text\" name=\"query\" class=\"header-search-form-input\" placeholder=\"Поиск фильмов\">\r\n    <button class=\"header-search-form-btn\" type=\"submit\"></button>\r\n  </form>\r\n  <p id=\"header-search-warning-show\"  class=\"header-search-warning-show is-hidden\">Search result not successful. Enter the correct movie name and</p>\r\n`,\r\n  myLibraryHeader: `<div class=\" header my-library-header header-container\">\r\n  \r\n  <ul class=\"header-button-list\">\r\n    <li class=\"header-button-item\"><button class=\"header-button header-button-watched is-active-btn\">watched</button></li>\r\n    <li class=\"header-button-item\"><button class=\"header-button header-button-queue\">queue</button></li>\r\n  </ul>\r\n`,\r\n  modalHeader: `<div class=\"header modal-header header-container\">\r\n`,\r\n};\r\nexport default headerTemplates;\r\n","const spinnerRef = document.querySelector('.js-spinner');\r\n\r\nfunction showSpinner() {\r\n  spinnerRef.classList.add('is-open');\r\n}\r\n\r\nfunction hideSpinner() {\r\n  spinnerRef.classList.remove('is-open');\r\n}\r\n\r\nexport { showSpinner, hideSpinner };\r\n","const apiServise = {\r\n  query: '',\r\n  page: 1,\r\n  filmsAmount: 0,\r\n  path: 'https://api.themoviedb.org/3',\r\n  key: 'ffddee44025dd24685ea61d637d56d24',\r\n\r\n  setQuery(value) {\r\n    this.query = value;\r\n  },\r\n\r\n  setPage(value) {\r\n    this.page = value;\r\n  },\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  },\r\n\r\n  decrementPage() {\r\n    this.page -= 1;\r\n  },\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  },\r\n\r\n  setFilmsAmount(value) {\r\n    this.filmsAmount = value;\r\n  },\r\n\r\n  fetchTrends() {\r\n    return fetch(\r\n      `${this.path}/trending/movie/day?api_key=${this.key}&page=${this.page}`,\r\n    ).then(response => response.json());\r\n  },\r\n\r\n  fetchMoviesByKeyword() {\r\n    return fetch(\r\n      `${this.path}/search/movie?api_key=${this.key}&language=en-US&page=${this.page}&include_adult=false&query=${this.query}`,\r\n    ).then(response => response.json());\r\n  },\r\n};\r\n\r\nexport default apiServise;\r\n","const decGenres = [\r\n{ id: 28, name: \"Action\" },\r\n{id: 12, name: \"Adventure\"},\r\n{id: 16, name: \"Animation\"},\r\n{id: 35, name: \"Comedy\"},\r\n{id: 80, name: \"Crime\"},\r\n{id: 99, name: \"Documentary\"},\r\n{id: 18, name: \"Drama\"},\r\n{id: 10751, name: \"Family\"},\r\n{id: 14, name: \"Fantasy\"},\r\n{id: 36, name: \"History\"},\r\n{id: 27, name: \"Horror\"},\r\n{id: 10402, name: \"Music\"},\r\n{id: 9648, name: \"Mystery\"},\r\n{id: 10749, name: \"Romance\"},\r\n{id: 878, name: \"Science Fiction\"},\r\n{id: 10770, name: \"TV Movie\"},\r\n{id: 53, name: \"Thriller\"},\r\n{id: 10752, name: \"War\"},\r\n{ id: 37, name: \"Western\" }]\r\n\r\nexport default decGenres","import genres from './decodingJenres';\r\n\r\nfunction updateFilmsGalleryMarkup(films) {\r\n  // console.log('genres: ', genres);\r\n\r\n  films.map(({ id, poster_path, title, release_date, genre_ids }) => {\r\n    const filteredGenres = genres.filter(genre => genre_ids.includes(genre.id));\r\n    // console.log('filteredGenres: ', filteredGenres);\r\n\r\n    const mapedGenres = filteredGenres.map(({ name }) => name);\r\n    // console.log('mapedGenres: ', mapedGenres);\r\n\r\n    let slicedMapedGenres = [];\r\n\r\n    if (mapedGenres.length < 3) {\r\n      slicedMapedGenres = mapedGenres;\r\n    } else {\r\n      slicedMapedGenres = mapedGenres.slice(0, 2);\r\n      slicedMapedGenres.push('Other');\r\n    }\r\n    // console.log('slicedMapedGenres: ', slicedMapedGenres);\r\n\r\n    const markup = `\r\n<li class=\"films-gallery-item\" data-id=\"${id}\">\r\n  <img\r\n    class=\"films-gallery-item-image\"\r\n    src=\"https://image.tmdb.org/t/p/w342${poster_path}\"\r\n    alt=\"«${title}» film poster\"\r\n  >\r\n  <p class=\"films-gallery-item-title\">${title.toUpperCase()}</p>\r\n  <p class=\"films-gallery-item-info\">${slicedMapedGenres.join(', ')} | ${\r\n      release_date.split('-')[0]\r\n    }</p>\r\n</li>\r\n`;\r\n\r\n    const filmsGallery = document.querySelector('#films-gallery');\r\n    filmsGallery.insertAdjacentHTML('beforeend', markup);\r\n  });\r\n}\r\n\r\nexport default updateFilmsGalleryMarkup;\r\n","import {\r\n  paginateFilms,\r\n  startListeningOnPaginationContainerClick,\r\n  stopListeningOnPaginationContainerClick,\r\n} from './pagination';\r\nimport { showSpinner, hideSpinner } from './spinner';\r\nimport apiServise from './api-servise';\r\nimport updateFilmsGalleryMarkup from './films-gallery';\r\n\r\nconst refs = {\r\n  filmsGallery: document.querySelector('#films-gallery'),\r\n};\r\n\r\nfunction listenSearchFormSubmit() {\r\n  const searchFormRef = document.querySelector('#search-form');\r\n  // console.log('searchFormRef: ', searchFormRef);\r\n\r\n  searchFormRef.addEventListener('submit', handleSearchFormSubmit);\r\n}\r\n\r\nfunction handleSearchFormSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  stopListeningOnPaginationContainerClick();\r\n\r\n  refs.filmsGallery.removeAttribute('data-feature');\r\n  // console.log(refs.filmsGallery);\r\n\r\n  apiServise.resetPage();\r\n  // console.log('apiServise.page: ', apiServise.page);\r\n\r\n  const noticeRef = document.querySelector('.header-search-warning-show');\r\n  // console.log('noticeRef: ', noticeRef);\r\n\r\n  noticeRef.classList.add('is-hidden');\r\n\r\n  const form = event.currentTarget;\r\n  const input = form.elements.query;\r\n\r\n  if (input.value === '') {\r\n    noticeRef.classList.remove('is-hidden');\r\n    noticeRef.textContent =\r\n      'Unable to make a search query. Please enter any text!';\r\n\r\n    return;\r\n  }\r\n\r\n  apiServise.setQuery(input.value);\r\n  // console.log('apiServise.query: ', apiServise.query);\r\n\r\n  showSpinner();\r\n\r\n  renderFilmsByKeywordPagination().catch(console.log).finally(hideSpinner);\r\n\r\n  startListeningOnPaginationContainerClick();\r\n\r\n  form.reset();\r\n}\r\n\r\nfunction renderFilmsByKeywordPagination() {\r\n  return renderFilmsByKeywordGallery().then(() => {\r\n    paginateFilms(apiServise.filmsAmount);\r\n  });\r\n}\r\n\r\nfunction renderFilmsByKeywordGallery() {\r\n  return apiServise\r\n    .fetchMoviesByKeyword()\r\n    .then(({ results, total_results }) => {\r\n      // console.log(results);\r\n      // console.log(total_results);\r\n\r\n      const noticeRef = document.querySelector('.header-search-warning-show');\r\n      // console.log('noticeRef: ', noticeRef);\r\n\r\n      if (results.length === 0) {\r\n        noticeRef.classList.remove('is-hidden');\r\n        noticeRef.textContent =\r\n          'Your search did not match any films. Please clarify the request!';\r\n\r\n        return;\r\n      }\r\n\r\n      refs.filmsGallery.innerHTML = '';\r\n\r\n      updateFilmsGalleryMarkup(results);\r\n\r\n      apiServise.setFilmsAmount(total_results);\r\n\r\n      console.log('apiServise.filmsAmount: ', apiServise.filmsAmount);\r\n\r\n      return;\r\n    });\r\n}\r\n\r\nexport { listenSearchFormSubmit, renderFilmsByKeywordGallery };\r\n","import Pagination from 'tui-pagination';\r\nimport { renderTrendsGallery } from './homePageRendering';\r\nimport { showSpinner, hideSpinner } from './spinner';\r\nimport apiServise from './api-servise';\r\nimport { renderFilmsByKeywordGallery } from './movieSearch';\r\n\r\nconst refs = {\r\n  filmsGallery: document.querySelector('#films-gallery'),\r\n  paginationContainer: document.querySelector('#pagination'),\r\n};\r\n\r\nfunction paginateFilms() {\r\n  const options = {\r\n    totalItems: apiServise.filmsAmount,\r\n    itemsPerPage: 20,\r\n    visiblePages: 5,\r\n    page: 1,\r\n    centerAlign: false,\r\n    firstItemClassName: 'tui-first-child',\r\n    lastItemClassName: 'tui-last-child',\r\n    template: {\r\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\r\n      currentPage:\r\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\r\n      moveButton:\r\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\r\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\r\n        '</a>',\r\n      disabledMoveButton:\r\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\r\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\r\n        '</span>',\r\n      moreButton:\r\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\r\n        '<span class=\"tui-ico-ellip\">...</span>' +\r\n        '</a>',\r\n    },\r\n  };\r\n\r\n  new Pagination('pagination', options);\r\n}\r\n\r\nfunction startListeningOnPaginationContainerClick() {\r\n  refs.paginationContainer.addEventListener(\r\n    'click',\r\n    handleOnPaginationContainerClick,\r\n  );\r\n\r\n  console.log('apiServise.page: ', apiServise.page);\r\n  console.log('Start');\r\n}\r\n\r\nfunction stopListeningOnPaginationContainerClick() {\r\n  refs.paginationContainer.removeEventListener(\r\n    'click',\r\n    handleOnPaginationContainerClick,\r\n  );\r\n\r\n  console.log('apiServise.page: ', apiServise.page);\r\n  console.log('Stop');\r\n}\r\n\r\nfunction handleOnPaginationContainerClick(event) {\r\n  if (event.target.nodeName !== 'A') {\r\n    return;\r\n  }\r\n\r\n  refs.filmsGallery.innerHTML = '';\r\n\r\n  showSpinner();\r\n\r\n  const button = event.target;\r\n\r\n  // console.dir(button);\r\n  // console.log('button.className: ', button.className);\r\n  console.log(\r\n    \"refs.filmsGallery.hasAttribute('data-feature'): \",\r\n    refs.filmsGallery.hasAttribute('data-feature'),\r\n  );\r\n\r\n  switch (button.className) {\r\n    case 'tui-page-btn':\r\n      apiServise.setPage(Number(button.textContent));\r\n      // console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    case 'tui-page-btn tui-prev':\r\n      apiServise.decrementPage();\r\n      // console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    case 'tui-page-btn tui-next':\r\n      apiServise.incrementPage();\r\n      // console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    case 'tui-page-btn tui-first':\r\n      apiServise.resetPage();\r\n      // console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    case 'tui-page-btn tui-last':\r\n      apiServise.setPage(apiServise.filmsAmount / 20);\r\n      // console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    case 'tui-page-btn tui-first-child':\r\n      apiServise.resetPage();\r\n      // console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    case 'tui-page-btn tui-prev-is-ellip tui-first-child':\r\n      const activeBtnRef1 = document.querySelector('.tui-is-selected');\r\n      console.log('activeBtnRef1.textContent: ', activeBtnRef1.textContent);\r\n      apiServise.setPage(Number(activeBtnRef1.textContent));\r\n      console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    case 'tui-page-btn tui-next-is-ellip tui-last-child':\r\n      const activeBtnRef2 = document.querySelector('.tui-is-selected');\r\n      console.log('activeBtnRef2.textContent: ', activeBtnRef2.textContent);\r\n      apiServise.setPage(Number(activeBtnRef2.textContent));\r\n      console.log('page: ', apiServise.page);\r\n      refs.filmsGallery.hasAttribute('data-feature')\r\n        ? renderTrendsGallery().catch(console.log).finally(hideSpinner)\r\n        : renderFilmsByKeywordGallery().catch(console.log).finally(hideSpinner);\r\n      return;\r\n\r\n    default:\r\n      console.log('Hi!');\r\n  }\r\n}\r\n\r\nexport {\r\n  paginateFilms,\r\n  startListeningOnPaginationContainerClick,\r\n  stopListeningOnPaginationContainerClick,\r\n};\r\n","import refs from './refs';\r\n\r\nrefs.openModalBtn.addEventListener('click', onOpenModal),\r\n  refs.closeModalBtn.addEventListener('click', onCloseModal),\r\n  refs.backdrop.addEventListener('click', onBackdropClick);\r\n\r\nfunction onOpenModal() {\r\n  window.addEventListener('keydown', onEscKeyPress);\r\n  refs.backdrop.classList.remove('is-hidden');\r\n  document.body.classList.add('show-modal');\r\n}\r\n\r\nfunction onCloseModal() {\r\n  window.removeEventListener('keydown', onEscKeyPress);\r\n  document.body.classList.remove('show-modal');\r\n}\r\n\r\nfunction onBackdropClick(event) {\r\n  if (event.currentTarget === event.target) {\r\n    onCloseModal();\r\n  }\r\n}\r\n\r\nfunction onEscKeyPress(event) {\r\n  const ESC_KEY_CODE = 'Escape';\r\n  const isEscKey = event.code === ESC_KEY_CODE;\r\n\r\n  if (isEscKey) {\r\n    onCloseModal();\r\n  }\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebaseui';\r\nimport '../../node_modules/firebaseui/dist/firebaseui.css';\r\nimport './modal-login';\r\nimport refs from './refs';\r\nimport { getUserLibraryFromDatabase } from './userLibrary';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyC7TRb9mfyMhzQU-yq3pDKTxl2-zaHwRmo',\r\n  authDomain: 'filmoteka-login.firebaseapp.com',\r\n  databaseURL:\r\n    'https://filmoteka-login-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'filmoteka-login',\r\n  storageBucket: 'filmoteka-login.appspot.com',\r\n  messagingSenderId: '658952655924',\r\n  appId: '1:658952655924:web:26304edc0b944079c1e661',\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\r\nconst uiStart = () => ui.start('#firebaseui-auth-container', uiConfig);\r\n//phoneAuth\r\nnew firebase.auth.PhoneAuthProvider();\r\n\r\n// =======VARIABLE FOR WORKING WITH USER LIBRARY========\r\nexport const filmotekaDatabase = firebase.database().ref('users');\r\nexport let currentUserId = '';\r\nconsole.log(currentUserId);\r\n\r\nconst uiConfig = {\r\n  signInFlow: 'popup',\r\n  signInOptions: [\r\n    firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n    firebaseui.auth.AnonymousAuthProvider.PROVIDER_ID,\r\n  ],\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: function (authResult) {\r\n      if (authResult) {\r\n        setUserData(firebaseUser.uid);\r\n        return true;\r\n      }\r\n    },\r\n  },\r\n};\r\nrefs.logOutbutton.addEventListener('click', e => {\r\n  firebase.auth().signOut();\r\n  localStorage.removeItem('currentUserId');\r\n  window.location.reload();\r\n});\r\n\r\n// login state\r\nfirebase.auth().onAuthStateChanged(firebaseUser => {\r\n  if (firebaseUser) {\r\n    let displayName = firebaseUser.displayName;\r\n    if (displayName === null) {\r\n      displayName = 'guest';\r\n    }\r\n    refs.userName.innerHTML = `${displayName}`;\r\n    document.body.classList.remove('show-modal');\r\n    showLogOutbutton();\r\n    localStorage.setItem('currentUserId', JSON.stringify(firebaseUser.uid));\r\n    currentUserId = JSON.parse(localStorage.getItem('currentUserId'));\r\n    console.log(currentUserId);\r\n\r\n    if (!getUserLibraryFromDatabase(currentUserId)) {\r\n      setUserData(currentUserId);\r\n    }\r\n  } else {\r\n    refs.userName.innerHTML = '';\r\n    showOpenModalBtn();\r\n    uiStart();\r\n  }\r\n});\r\n\r\nfunction showLogOutbutton() {\r\n  refs.logOutbutton.classList.remove('is-hidden');\r\n  refs.openModalBtn.classList.add('is-hidden');\r\n}\r\n\r\nfunction showOpenModalBtn() {\r\n  refs.openModalBtn.classList.remove('is-hidden');\r\n  refs.logOutbutton.classList.add('is-hidden');\r\n}\r\n\r\nfunction setUserData(userId) {\r\n  const userLibrary = {\r\n    userId: userId,\r\n    userWatched: [],\r\n    userQueue: [],\r\n  };\r\n  const updates = {};\r\n  updates['users/' + userId] = userLibrary;\r\n  return firebase.database().ref().update(updates);\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebaseui';\r\nimport 'firebase/database';\r\nimport '../../node_modules/firebaseui/dist/firebaseui.css';\r\nimport refs from './refs';\r\nimport { currentUserId, filmotekaDatabase } from './login-form';\r\n\r\nimport toastr from 'toastr';\r\nimport '../../node_modules/toastr/build/toastr.css';\r\ntoastr.options = {\r\n  closeButton: true,\r\n  debug: false,\r\n  newestOnTop: true,\r\n  progressBar: false,\r\n  positionClass: 'toast-bottom-right',\r\n  preventDuplicates: false,\r\n  onclick: null,\r\n  showDuration: '200',\r\n  hideDuration: '400',\r\n  timeOut: '2000',\r\n  extendedTimeOut: '1000',\r\n  showEasing: 'swing',\r\n  hideEasing: 'linear',\r\n  showMethod: 'fadeIn',\r\n  hideMethod: 'fadeOut',\r\n};\r\n\r\n// ========================VARIABLES==============================\r\n// export let currentUserId = JSON.parse(localStorage.getItem('currentUserId'));\r\n\r\n// let userWatched = getUserWatchedFromDatabase(currentUserId);\r\n// let userQueue = getUserQueueFromDatabase(currentUserId);\r\n\r\n// ==================INITIALAZING DATABASE========================\r\nfilmotekaDatabase.on('value', elem => {\r\n  const usersBase = elem.val();\r\n  // console.log(usersBase);\r\n});\r\n\r\n// ==================ADDING TO USER WATCHED LIBRARY===============\r\nexport function updateUserWatched(movieData) {\r\n  let userData = getUserLibraryFromDatabase(currentUserId);\r\n  if (!userData) {\r\n    toastr['error']('Please LOG IN to add the movie');\r\n    return;\r\n  }\r\n\r\n  if (userData.userWatched) {\r\n    if (!userData.userQueue) {\r\n      userData.userQueue = [];\r\n      updateUserDatabase(currentUserId, userData);\r\n      // console.log(userData.userQueue);\r\n    }\r\n    if (refs.addToWatchedBtn.classList.contains('js-is-in-watched')) {\r\n      let movieIndex = userData.userWatched.findIndex(\r\n        movie => movie.id === movieData.id,\r\n      );\r\n      movieData.isInWatched = false;\r\n      userData.userWatched.splice(movieIndex, 1);\r\n      updateUserDatabase(currentUserId, userData);\r\n      changeWatchedBtnToAdd();\r\n      toastr['success']('Removed from your Watched list');\r\n      return userData.userWatched;\r\n    } else {\r\n      const isDublicate = userData.userWatched.some(function (movie) {\r\n        return movie.id === movieData.id;\r\n      });\r\n      if (isDublicate) {\r\n        toastr['warning']('This movie has already been added');\r\n        return userData.userWatched;\r\n      } else if (!isDublicate) {\r\n        movieData.isInWatched = true;\r\n        userData.userWatched.push(movieData);\r\n        updateUserDatabase(currentUserId, userData);\r\n        toastr['success']('Added to your Watched list');\r\n        changeWatchedBtnToRemove();\r\n        return userData.userWatched;\r\n      }\r\n      return userData.userWatched;\r\n    }\r\n  } else {\r\n    movieData.isInWatched = true;\r\n    userData.userWatched = [];\r\n    userData.userWatched.push(movieData);\r\n\r\n    if (!userData.userQueue) {\r\n      userData.userQueue = [];\r\n      updateUserDatabase(currentUserId, userData);\r\n      // console.log(userData.userQueue);\r\n    } else {\r\n      updateUserDatabase(currentUserId, userData);\r\n    }\r\n    toastr['success']('Added to your Watched list');\r\n    changeWatchedBtnToRemove();\r\n  }\r\n  // getUserWatchedFromDatabase(currentUserId);\r\n}\r\n\r\n// ==================ADDING TO USER QUEUE LIBRARY===============\r\nexport function updateUserQueue(movieData) {\r\n  let userData = getUserLibraryFromDatabase(currentUserId);\r\n  if (!userData) {\r\n    toastr['error']('Please LOG IN to add the movie');\r\n    return;\r\n  }\r\n\r\n  // console.log(userData.userQueue);\r\n  if (userData.userQueue) {\r\n    if (!userData.userWatched) {\r\n      userData.userWatched = [];\r\n      updateUserDatabase(currentUserId, userData);\r\n    }\r\n    if (refs.addToQueueBtn.classList.contains('js-is-in-queue')) {\r\n      let movieIndex = userData.userQueue.findIndex(\r\n        movie => movie.id === movieData.id,\r\n      );\r\n      movieData.isInQueue = false;\r\n      userData.userQueue.splice(movieIndex, 1);\r\n      updateUserDatabase(currentUserId, userData);\r\n      changeQueueBtnToAdd();\r\n      toastr['success']('Removed from your Queue');\r\n      return userData.userQueue;\r\n    } else {\r\n      if (isInWatched(movieData)) {\r\n        console.log('you`ve already watched this movie');\r\n        toastr['warning']('You`ve alredy watched this movie');\r\n        return userData.userQueue;\r\n      } else {\r\n        const isDublicate = userData.userQueue.some(function (movie) {\r\n          return movie.id === movieData.id;\r\n        });\r\n\r\n        if (isDublicate) {\r\n          console.log('this movie has already been added');\r\n          toastr['warning']('This movie has already been added');\r\n          return userData.userQueue;\r\n        } else if (!isDublicate) {\r\n          movieData.isInQueue = true;\r\n          userData.userQueue.push(movieData);\r\n          updateUserDatabase(currentUserId, userData);\r\n          toastr['success']('Added to your Queue');\r\n          // изменение текста кнопки\r\n          changeQueueBtnToRemove();\r\n          return userData.userQueue;\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    userData.userQueue = [];\r\n    movieData.isInQueue = true;\r\n    userData.userQueue.push(movieData);\r\n\r\n    if (!userData.userWatched) {\r\n      userData.userQueue = [];\r\n      updateUserDatabase(currentUserId, userData);\r\n    } else {\r\n      updateUserDatabase(currentUserId, userData);\r\n    }\r\n\r\n    toastr['success']('Added to your Queue');\r\n    // изменение текста кнопки\r\n    changeQueueBtnToRemove();\r\n    return userData.userQueue;\r\n  }\r\n}\r\n\r\n// ===============CHECK IF WATCHED MOVIE IS IN QUEUE. DELETE IF SO=================\r\nexport function checkIfInQueue(movieData) {\r\n  let userData = getUserLibraryFromDatabase(currentUserId);\r\n  // console.log(userData.userQueue);\r\n  if (!userData) {\r\n    toastr['error']('Please LOG IN to add the movie');\r\n    return;\r\n  }\r\n\r\n  if (userData.userQueue) {\r\n    if (!userData.userWatched) {\r\n      userData.userWatched = [];\r\n      updateUserDatabase(currentUserId, userData);\r\n    }\r\n\r\n    const isDublicate = userData.userQueue.some(function (movie) {\r\n      return movie.id === movieData.id;\r\n    });\r\n    if (isDublicate) {\r\n      let movieIndex = userData.userQueue.findIndex(\r\n        movie => movie.id === movieData.id,\r\n      );\r\n      movieData.isInQueue = false;\r\n      userData.userQueue.splice(movieIndex, 1);\r\n      changeQueueBtnToAdd();\r\n      console.log('movie was deleted wrom Queue and added to watched');\r\n      updateUserDatabase(currentUserId, userData);\r\n    }\r\n    // getUserQueueFromDatabase(currentUserId);\r\n  }\r\n}\r\n\r\n// =============IS THIS MOVIE IS ALREADY WATCHED (DO NOT ADD TO QUEUE)=======\r\nfunction isInWatched(movieData) {\r\n  let userData = getUserLibraryFromDatabase(currentUserId);\r\n\r\n  if (userData.userWatched) {\r\n    const isDublicate = userData.userWatched.some(function (movie) {\r\n      return movie.id === movieData.id;\r\n    });\r\n    console.log(isDublicate);\r\n    return isDublicate;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n// ================ DATABASE FUNCTIONS==========================\r\n// GET ALL LIBRARY DATA FROM DATABASE\r\nexport function getUserLibraryFromDatabase(userId) {\r\n  let userBase = {};\r\n  filmotekaDatabase.on('value', elem => {\r\n    userBase = elem.val()[`${userId}`];\r\n    console.log(userBase);\r\n  });\r\n  return userBase;\r\n}\r\n\r\n// GET USERWATCHED DATA FROM DATABASE\r\nexport function getUserWatchedFromDatabase(userId) {\r\n  if (!userId) {\r\n    return;\r\n  }\r\n  let userWatched = [];\r\n  filmotekaDatabase.on('value', elem => {\r\n    userWatched = elem.val()[`${userId}`][`userWatched`];\r\n    // console.log(userWatched);\r\n  });\r\n  return userWatched;\r\n}\r\n\r\n// GET USERQUEUE DATA FROM DATABASE\r\nexport function getUserQueueFromDatabase(userId) {\r\n  if (!userId) {\r\n    toastr['error']('Please LOG IN to create Your Library');\r\n    return;\r\n  }\r\n  let userQueue = [];\r\n  filmotekaDatabase.on('value', elem => {\r\n    userQueue = elem.val()[`${userId}`][`userQueue`];\r\n    // console.log(userQueue);\r\n  });\r\n  return userQueue;\r\n}\r\n\r\n// UPDATE DATABaSE\r\nfunction updateUserDatabase(userId, userData) {\r\n  const userLibrary = {\r\n    userId: userId,\r\n    userWatched: userData.userWatched,\r\n    userQueue: userData.userQueue,\r\n  };\r\n  const updates = {};\r\n  updates['users/' + userId] = userLibrary;\r\n  return firebase.database().ref().update(updates);\r\n}\r\n\r\n// ==========================BUTTONS HANDLERS===============================\r\nfunction changeWatchedBtnToRemove() {\r\n  refs.addToWatchedBtn.textContent = 'Watched (remove)';\r\n  refs.addToWatchedBtn.classList.add('js-is-in-watched');\r\n}\r\n\r\nfunction changeWatchedBtnToAdd() {\r\n  refs.addToWatchedBtn.textContent = 'Add to Watched';\r\n  refs.addToWatchedBtn.classList.remove('js-is-in-watched');\r\n}\r\n\r\nfunction changeQueueBtnToRemove() {\r\n  refs.addToQueueBtn.textContent = 'In queue (remove)';\r\n  refs.addToQueueBtn.classList.add('js-is-in-queue');\r\n}\r\n\r\nfunction changeQueueBtnToAdd() {\r\n  refs.addToQueueBtn.textContent = 'Add to Queue';\r\n  refs.addToQueueBtn.classList.remove('js-is-in-queue');\r\n}\r\n\r\n// UPDATE BUTTONS IN MOVIECARD IF USER HAS WATCHeD THE MOVIE\r\nexport function checkIfIsInUserLibrary(movieData) {\r\n  let userData = getUserLibraryFromDatabase(currentUserId);\r\n\r\n  if (!userData) {\r\n    toastr['error']('Please LOG IN to add the movie');\r\n    return;\r\n  }\r\n  // CHECK USER WATCHeD\r\n  if (userData.userWatched) {\r\n    const isDublicate = userData.userWatched.some(\r\n      movie => movie.id === movieData.id,\r\n    );\r\n    // console.log(isDublicate);\r\n    if (isDublicate) {\r\n      let movieIndex = userData.userWatched.findIndex(\r\n        movie => movie.id === movieData.id,\r\n      );\r\n      console.log(movieIndex);\r\n      if (userData.userWatched[movieIndex].isInWatched) {\r\n        changeWatchedBtnToRemove();\r\n      }\r\n    }\r\n  }\r\n  // CHECK USER QUEUE\r\n  if (userData.userQueue) {\r\n    const isDublicate = userData.userQueue.some(\r\n      movie => movie.id === movieData.id,\r\n    );\r\n    console.log(isDublicate);\r\n    if (isDublicate) {\r\n      let movieIndex = userData.userQueue.findIndex(\r\n        movie => movie.id === movieData.id,\r\n      );\r\n      console.log(movieIndex);\r\n      if (userData.userQueue[movieIndex].isInQueue) {\r\n        changeQueueBtnToRemove();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import headerTemplates from './components/headers-tpl';\r\nimport {\r\n  paginateFilms,\r\n  startListeningOnPaginationContainerClick,\r\n  stopListeningOnPaginationContainerClick,\r\n} from './pagination';\r\nimport { showSpinner, hideSpinner } from './spinner';\r\nimport apiServise from './api-servise';\r\nimport {\r\n  getUserWatchedFromDatabase,\r\n  getUserQueueFromDatabase,\r\n} from './userLibrary';\r\nimport { currentUserId } from './login-form';\r\nimport updateFilmsGalleryMarkup from './films-gallery';\r\n\r\nconst refs = {\r\n  header: document.querySelector('.header-container-js'),\r\n  filmsGallery: document.querySelector('#films-gallery'),\r\n  libraryBtn: document.querySelector('.navigation-list-item-link-my-library'),\r\n  paginationContainer: document.querySelector('#pagination'),\r\n  homeLink: document.querySelector('.navigation-list-item-link-home'),\r\n};\r\n\r\nfunction renderHomePage(headerTpl) {\r\n  stopListeningOnPaginationContainerClick();\r\n  refs.filmsGallery.setAttribute('data-feature', 'trends');\r\n  console.log(refs.filmsGallery);\r\n\r\n  apiServise.resetPage();\r\n  showSpinner();\r\n  updateHeaderMarkup(headerTpl);\r\n  renderTrendsPagination().catch(console.log).finally(hideSpinner);\r\n  startListeningOnPaginationContainerClick();\r\n}\r\n\r\nfunction updateHeaderMarkup(headerTpl) {\r\n  refs.header.innerHTML = '';\r\n  refs.header.insertAdjacentHTML('beforeend', headerTpl);\r\n  refs.libraryBtn.addEventListener('click', libraryHandleClick);\r\n}\r\n\r\nfunction renderTrendsPagination() {\r\n  return renderTrendsGallery().then(() => {\r\n    paginateFilms();\r\n  });\r\n}\r\n\r\nfunction renderTrendsGallery() {\r\n  return apiServise.fetchTrends().then(({ results, total_results }) => {\r\n    // console.log('results: ', results);\r\n    // console.log('total_results: ', total_results);\r\n\r\n    refs.filmsGallery.innerHTML = '';\r\n\r\n    updateFilmsGalleryMarkup(results);\r\n\r\n    apiServise.setFilmsAmount(total_results);\r\n    console.log('apiServise.filmsAmount: ', apiServise.filmsAmount);\r\n\r\n    return;\r\n  });\r\n}\r\n\r\n//--------------ОТРИСОВКА БИБЛИОТЕКИ ПОЛЬЗОВАТЕЛЯ----------------\r\nfunction libraryHandleClick(event) {\r\n  event.preventDefault();\r\n  refs.homeLink.classList.remove('current');\r\n  refs.libraryBtn.classList.add('current');\r\n  const watchedFilms = getUserWatchedFromDatabase(currentUserId);\r\n  const queuedFilms = getUserQueueFromDatabase(currentUserId);\r\n  updateHeaderMarkup(headerTemplates.myLibraryHeader);\r\n\r\n  if (document.querySelector('.modal')) {\r\n    document.querySelector('.modal').remove();\r\n  }\r\n\r\n  const watchedBtn = document.querySelector('.header-button-watched');\r\n  const queueBtn = document.querySelector('.header-button-queue');\r\n\r\n  refs.filmsGallery.innerHTML = '';\r\n  refs.paginationContainer.style.display = 'none';\r\n  updateFilmsLibraryMarkup(watchedFilms);\r\n  // renderMyLibraryWatched(watchedBtn, queueBtn, watchedFilms);\r\n\r\n  function onLibraryButtonsClick(activeBtn, inactiveBtn, films) {\r\n    activeBtn.addEventListener('click', event => {\r\n      event.preventDefault();\r\n      updateFilmsLibraryMarkup(films);\r\n      inactiveBtn.classList.remove('is-active-btn');\r\n      activeBtn.classList.add('is-active-btn');\r\n    });\r\n  }\r\n\r\n  onLibraryButtonsClick(queueBtn, watchedBtn, queuedFilms);\r\n  onLibraryButtonsClick(watchedBtn, queueBtn, watchedFilms);\r\n\r\n  function updateFilmsLibraryMarkup(localStorageFilms) {\r\n    refs.filmsGallery.innerHTML = '';\r\n    localStorageFilms.map(\r\n      ({ id, poster_path, title, release_date, genres, vote_average }) => {\r\n        const markup = `\r\n<li class=\"films-gallery-item\" data-id=\"${id}\">\r\n  <img\r\n    class=\"films-gallery-item-image\"\r\n    src=\"https://image.tmdb.org/t/p/w342${poster_path}\"\r\n    alt=\"«${title}» film poster\"\r\n  >\r\n  <p class=\"films-gallery-item-title\">${title.toUpperCase()}</p>\r\n  <p class=\"films-gallery-item-info\">${genres.join(\r\n    ', ',\r\n  )} | ${release_date}<span class=\"modal-info-vote-average library\">${vote_average}</span></p>\r\n</li>\r\n`;\r\n        refs.filmsGallery.insertAdjacentHTML('beforeend', markup);\r\n      },\r\n    );\r\n  }\r\n  //========================Zoe Dobavila=======================\r\n  function renderMyLibraryWatched(activeBtn, inactiveBtn, films) {\r\n    updateFilmsLibraryMarkup(films);\r\n    inactiveBtn.classList.remove('is-active-btn');\r\n    activeBtn.classList.add('is-active-btn');\r\n  }\r\n}\r\n\r\n//-------------------------------------------------------------\r\n\r\nexport { renderHomePage, renderTrendsGallery };\r\n","import * as basicLightbox from 'basiclightbox';\r\nimport photoRed from '../images/photo-red.jpg';\r\n\r\nconst markupStudent = `<div class=\"team-wrapper\">\r\n<div class=\"team-card\">\r\n <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01301DGATC-U013V8Q7HU1-b66c40babb7d-192\"\r\n  >\r\n    <p class=\"team-name\">Rostyslav Zahorulko</p>\r\n    <p class=\"team-role\">Team Lead</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n     <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U01A5LX36UT-d79e95c64409-5122\"\r\n  >\r\n    <p class=\"team-name\">Arkadii Basovych</p>\r\n    <p class=\"team-role\">Scrum Master</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n    <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U01A9LTBZA8-06cbe1fcd7b6-512\"\r\n  >\r\n    <p class=\"team-name\">Oksana Cherepanova</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n    <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U019WN8GZJS-380c6cd06280-512\"\r\n  >\r\n    <p class=\"team-name\">Natalia Duvirak</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n    <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U01AT710YLQ-3a6d16128ec7-512\"\r\n  >\r\n    <p class=\"team-name\">David<br>Shakaya</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n    <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U01A3HTTQE6-4c9caf01316f-512\"\r\n  >\r\n    <p class=\"team-name\">Oleksii Maistriuk</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n   <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U01ATCQ5GKA-46dd5abf2215-512\"\r\n  >\r\n    <p class=\"team-name\">Zoe<br>Baletska</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n    <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U019WKPR89L-21c1789a67bc-512\"\r\n  >\r\n    <p class=\"team-name\">Serhii<br>Koziuba</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n    <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U019WP9NVN2-6122ddfef0b5-512\"\r\n  >\r\n    <p class=\"team-name\">Konstantin Bruno</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n    <img\r\n    class=\"team-image\"\r\n    src=\"${photoRed}\"\r\n  >\r\n    <p class=\"team-name\">Iryna<br>Redka</p>\r\n    <p class=\"team-role\">Developer</p>\r\n    \r\n</div>\r\n<div class=\"team-card\">\r\n   <img\r\n    class=\"team-image\"\r\n    src=\"https://ca.slack-edge.com/T01AD58HHH7-U019P8QMTUP-6513aed3ebc7-512\"\r\n  >\r\n    <p class=\"team-name\">Larysa Smyrnova</p>\r\n    <p class=\"team-role\">Developer</p>\r\n</div>\r\n</div>`;\r\nconst container = document.querySelector('.open-modal-develop');\r\n\r\ncontainer.addEventListener('click', openModalStudent);\r\n\r\nconst modal = basicLightbox.create(markupStudent);\r\n\r\nfunction openModalStudent(e) {\r\n  modal.show();\r\n\r\n  window.addEventListener('keydown', closeModalHandler);\r\n\r\n  function closeModalHandler(e) {\r\n    if (e.code === 'Escape') {\r\n      modal.close();\r\n      window.removeEventListener('keydown', closeModalHandler);\r\n    }\r\n  }\r\n}\r\n","import './sass/main.scss';\r\nimport './js/refs';\r\nimport './js/homePageRendering';\r\nimport './js/movieSearch';\r\nimport { renderHomePage } from './js/homePageRendering';\r\nimport headerTemplates from './js/components/headers-tpl';\r\nimport { listenSearchFormSubmit } from './js/movieSearch';\r\n// import './js/modalMovie';\r\nimport './js/login-form.js';\r\nimport './js/pagination';\r\nimport './js/spinner';\r\nimport '../node_modules/basiclightbox/dist/basicLightbox.min.css';\r\nimport './js/modal-student';\r\nimport './js/api-servise';\r\n\r\nrenderHomePage(headerTemplates.homeHeader);\r\n\r\nlistenSearchFormSubmit();\r\n"],"sourceRoot":""}